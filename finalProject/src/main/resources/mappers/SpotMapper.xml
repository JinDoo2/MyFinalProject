<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="SpotMapper">
<sql id="test">
        <if test="searchType == 'spot_name'.toString()">
           and spot_name like '%${searchWord}%'
           <!-- and title like '%' ||#{searchWord} || '%' -->
           <!-- and title like CONCAT('%',CONCAT(#{searchWord},'%')) -->
        </if>
     </sql>
      
     <select id="search" resultType="com.plan.spot.SpotDTO">
     select * from spot where num > 0
     <include refid="test"></include>
     </select>

  <select id="list" resultType="com.plan.spot.SpotDTO">
 	  	select * from 
  	(select rownum R, A.* from 
  	(select * from 
  	<choose>
  		<when test="type == null">
  			spot
  		</when>

  	</choose>
  	order by ref asc) A )
  	where R between #{startRow} and #{lastRow}
  </select>
  
  <select id="totalList" resultType="java.lang.Integer">
  	select count(num) from spot
  </select>
  
  <update id="spotUpdate" parameterType="com.plan.spot.SpotDTO">
  	update spot set spot_name=#{spot_name}, big_name=#{big_name}, city_name=#{city_name}, contents=#{contents}, spot_xlocation=#{spot_xlocation}, spot_ylocation= #{spot_ylocation}, thema=#{thema}, city_no=#{city_no} , spot_img=#{spot_img},spot_address=#{spot_address},category=#{category},address=#{address},phone=#{phone},website=#{website} where num=#{num}
  </update>
  
  <insert id="spotWrite" parameterType="com.plan.spot.SpotDTO">
  	insert into spot values(spot_SEQ.nextVal,#{spot_name},#{big_name},#{city_name},#{contents},#{spot_xlocation},#{spot_ylocation},#{thema},#{city_no},#{spot_img},spot_SEQ.currVal,#{spot_address},#{category},#{address},#{phone},#{website})
  </insert>
  
  <select id="spotView" resultType="com.plan.spot.SpotDTO">
  	select * from spot where num=#{num}
  </select>
  
<delete id="spotDelete" parameterType="com.plan.spot.SpotDTO">
  delete from spot where num=#{num}
  </delete>
  
  	<insert id="spotReply" parameterType="com.plan.spot.ReplyDTO">
  	insert into spot_reply values(spotreply_seq.nextVal,#{id},#{contents},sysdate,#{num},#{icon},#{spot_img},#{city_no})
  	</insert>
  	
  	<select id="spotReplyView" resultType="com.plan.spot.ReplyDTO">
  		select * from spot_reply where ref=#{num}
  	</select>
  	
  	<delete id="spotReplyDelete" parameterType="com.plan.spot.ReplyDTO">
  		delete from spot_reply where num=#{num}
  	</delete>
  	
  	<update id="spotReplyUpdate" parameterType="com.plan.spot.ReplyDTO">
  	update spot_reply set id=#{id},contents=#{contents} where num=#{num}
  </update>
  
  <select id="totalicon" resultType="java.lang.Integer">
 	 select count(icon) from spot_reply where ref=#{num}
  </select>
  
  <select id="badicon" resultType="java.lang.Integer">
   select count(icon) from spot_reply where icon=1 and ref=#{num}
  </select>
  
  <select id="sosoicon" resultType="java.lang.Integer">
  select count(icon) from spot_reply where icon=3 and ref=#{num}
  </select>
  
  <select id="goodicon" resultType="java.lang.Integer">
  select count(icon) from spot_reply where icon=5 and ref=#{num}
  </select>
   
   <select id="all_category" resultType="com.plan.spot.SpotDTO">
 	 select * from 
  	(select rownum R, A.* from 
  	(select * from 
  	<choose>
  		<when test="type == null">
  			spot
  		</when>
  	</choose>
  	order by ref asc) A )
  	where R between #{startRow} and #{lastRow}
  </select>
   
   <select id="spot_category" resultType="com.plan.spot.SpotDTO">
 	 select * from spot where thema=#{category}
  </select>
    <select id="landmark_category" resultType="com.plan.spot.SpotDTO">
 	 select * from spot where thema=#{category}
  </select>
  
  <insert id="jim" parameterType="com.plan.scrap.ScrapDTO">
  insert into jim values(jim_seq.nextVal,#{id},null,#{spot_name})
  </insert>
  
  <select id="clibCount" resultType="java.lang.Integer">
  	select count(*) from jim where spot_name=#{spot_name}
  </select>
  
</mapper>